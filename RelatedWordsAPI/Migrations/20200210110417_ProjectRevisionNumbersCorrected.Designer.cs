// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RelatedWordsAPI.Models;

namespace RelatedWordsAPI.Migrations
{
    [DbContext(typeof(RelatedWordsContext))]
    [Migration("20200210110417_ProjectRevisionNumbersCorrected")]
    partial class ProjectRevisionNumbersCorrected
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("RelatedWordsAPI.Models.Page", b =>
                {
                    b.Property<int?>("PageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FilteredContent")
                        .HasColumnType("text");

                    b.Property<string>("OriginalContent")
                        .HasColumnType("text");

                    b.Property<string>("ProcessingStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("NotStarted");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("PageId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Page");
                });

            modelBuilder.Entity("RelatedWordsAPI.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("EditRevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("ProcessingRevisionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<string>("ProcessingStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasDefaultValue("NotStarted");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("ProjectId");

                    b.HasIndex("UserId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("RelatedWordsAPI.Models.Sentence", b =>
                {
                    b.Property<int>("SentenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("PageId")
                        .HasColumnType("integer");

                    b.Property<int>("SentenceNumber")
                        .HasColumnType("integer");

                    b.HasKey("SentenceId");

                    b.HasIndex("PageId");

                    b.ToTable("Sentence");
                });

            modelBuilder.Entity("RelatedWordsAPI.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("Salt")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("RelatedWordsAPI.Models.Word", b =>
                {
                    b.Property<int>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<string>("WordContent")
                        .HasColumnType("text");

                    b.HasKey("WordId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Word");
                });

            modelBuilder.Entity("RelatedWordsAPI.Models.WordPage", b =>
                {
                    b.Property<int>("WordId")
                        .HasColumnType("integer");

                    b.Property<int>("PageId")
                        .HasColumnType("integer");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.HasKey("WordId", "PageId");

                    b.HasIndex("PageId");

                    b.ToTable("WordPage");
                });

            modelBuilder.Entity("RelatedWordsAPI.Models.WordSentence", b =>
                {
                    b.Property<int>("WordId")
                        .HasColumnType("integer");

                    b.Property<int>("SentenceId")
                        .HasColumnType("integer");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.HasKey("WordId", "SentenceId");

                    b.HasIndex("SentenceId");

                    b.ToTable("WordSentence");
                });

            modelBuilder.Entity("RelatedWordsAPI.Models.Page", b =>
                {
                    b.HasOne("RelatedWordsAPI.Models.Project", "Project")
                        .WithMany("Pages")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("RelatedWordsAPI.Models.Project", b =>
                {
                    b.HasOne("RelatedWordsAPI.Models.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RelatedWordsAPI.Models.Sentence", b =>
                {
                    b.HasOne("RelatedWordsAPI.Models.Page", "Page")
                        .WithMany("Sentences")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RelatedWordsAPI.Models.Word", b =>
                {
                    b.HasOne("RelatedWordsAPI.Models.Project", "Project")
                        .WithMany("Words")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RelatedWordsAPI.Models.WordPage", b =>
                {
                    b.HasOne("RelatedWordsAPI.Models.Page", "Page")
                        .WithMany("WordPage")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RelatedWordsAPI.Models.Word", "Word")
                        .WithMany("WordPages")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RelatedWordsAPI.Models.WordSentence", b =>
                {
                    b.HasOne("RelatedWordsAPI.Models.Sentence", "Sentence")
                        .WithMany("WordInSentences")
                        .HasForeignKey("SentenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RelatedWordsAPI.Models.Word", "Word")
                        .WithMany("WordSentences")
                        .HasForeignKey("WordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
